


일반주문하기 
TP/SL 주문하기 
봇정지하기 
봇시작하기 


유저 등록 - DB처리 - 데이터 갱신 
유저 조회 - DB처리 - 리턴 

전략 등록 - DB처리 - 데이터 갱신 
전략 등록 - DB처리 - 조회 
전략 삭지 - 돌고 있는거 확인 - DB처리 - 데이터 갱신 

유저 - 전략 매칭 등록 - DB처리 - 데이터 갱신 
유저 - 전랙 매칭 수정 - DB처리 - 데이터 수정 
유저 - 전랙 매칭 조회 - DB처리 
유저 - 전략 정지 
유저 - 전략 시작 



일반주문하기 
: 마켓데이터 가져와서 갱신 
: 레버리지 데이터 가져와서 갱신 - 일단 전략에서 선정되면 무조건 가져와서 갱신처리 
: price 자릿수 계산하기 
: coin 자릿수 계산하기 
: 레버리지별 최소 금액보다 작으면 최소 금액만큼 다시요청해줌 ( 1회만 )
: 레버리지별 최대 금액 파악 (최대금액보다 작으면 최대 금액까지만 넣어줌 1회만 )
: 주문하기 

TP/SL 주문하기 
: price 자릿수 계산하기 
: TP/SL 주문요청 


매수도 매도 체크하기 
반대쪽 심볼이 존재한다면 청산하고, 주문하기 
: 포지션 가져오기 
: 일반주문의 청산 버전으로 진행하기 
: 익절, 손절 있으면 그렇게 하기 

봇정지하기 
봇시작하기 



// 초기화 하기 

// 유저 데이터 가져오기 
: 유저키값
: 동작하는 것들의 설정값 [] 


실행 로직 처리 
proc( 알림 데이터 ){
    // 알림 데이터와 맞는 유저를 찾는다. 
    user := 전략유저 찾기 (알림 데이터)
    for k,v := range user {
        주문처리(알림데이터) 
    } 
}


주문처리(v, 알림데이터) {
    
    if v.해당사항인지체크()

    v.유저 보유금 체크()

    v.유저 레버리지 체크() {
        최대보다 높으면 낮춰서 진행 
        v.레버리지낮추기
    }


    수량 := v.설정금액으로 수량변환
    v.유저 주문하기(수량, 알림데이터)

    if v.유저 익절체크 {
        v.익절()    
    }

    if v.유저 손절체크 { 
        v.손절()
    }
}












